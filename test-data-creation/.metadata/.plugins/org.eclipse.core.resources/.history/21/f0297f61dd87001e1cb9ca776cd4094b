package concretebuilders;

import java.util.HashMap;
import java.util.Map;

import builders.DataSetBuilder;
import models.DataSetConfig;
import models.Entity;

public class ConcreteDataSetBuilder implements DataSetBuilder{
	
	public Map<Integer, Entity> buildDataSetWithRepetitions(DataSetConfig dataSetConfig, Entity entity) {
		Integer numberOfFields = entity.listOfFields.size();
		Map<Integer, Entity> table = new HashMap<Integer, Entity>();
		table.put(0, entity);
		//TO-DO: Create new method that builds the vec \in {0,...,numRecs} x R^nFields with the chosen indexes
		//TO-DO: Create new method that builds the names with the elections of the last TO-DO.
		//TO-DO: Return Map
		return null;
	}

	public Map<Integer, Entity> addNoiseToDataSetWithRepetitions(DataSetConfig dataSetConfig) {
		// TODO Auto-generated method stub
		return null;
	}
	
	public ConcreteDataSetBuilder() {
		
	}
	
	public Integer[][] generateIndexes(){
		
	}
	
}
